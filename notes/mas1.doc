CREATE TABLE AIRLINE_SERVICES
(
	SID  NUMBER  NULL ,
	SERVICE_FROM  VARCHAR2(50 BYTE)  NOT NULL ,
	SERVICE_TO  VARCHAR2(50 BYTE)  NOT NULL ,
	EFARE  NUMBER(20,2)  NULL ,
	BFARE  NUMBER(20,2)  NULL ,
	FNUMBER  VARCHAR2(30 BYTE)  NOT NULL ,
	DTIME  VARCHAR2(20 BYTE)  NULL ,
	ATIME  VARCHAR2(20 BYTE)  NULL ,
	DISTANCE  NUMBER(30)  NULL 
);


CREATE  UNIQUE INDEX COM_SERV_PK ON AIRLINE_SERVICES
(
	FNUMBER  ASC,
	SERVICE_FROM  ASC,
	SERVICE_TO  ASC
);


ALTER TABLE AIRLINE_SERVICES
	ADD CONSTRAINT  COM_SERV_PK PRIMARY KEY (FNUMBER,SERVICE_FROM,SERVICE_TO);


CREATE TABLE BOOKINGDETAILS
(
	FNUMBER  VARCHAR2(30 BYTE) NOT NULL ,
	USER_ID  VARCHAR2(50 BYTE) NOT NULL ,
	DOJ  VARCHAR2(30 BYTE)  NOT NULL ,
	NOOFTICKETS  NUMBER(10)  NOT NULL ,
	JFROM  VARCHAR2(50 BYTE)  NOT NULL ,
	JTO  VARCHAR2(50 BYTE)  NOT NULL 
);


CREATE TABLE FLIEGHT_DETAILS
(
	FNUMBER  VARCHAR2(30 BYTE)  NOT NULL ,
	FNAME  VARCHAR2(50 BYTE)  NULL ,
	CAPACITY  NUMBER(10)  NULL 
);


CREATE  UNIQUE INDEX FLIEGHT_PK ON FLIEGHT_DETAILS
(
	FNUMBER  ASC
);


ALTER TABLE FLIEGHT_DETAILS
	ADD CONSTRAINT  FLIEGHT_PK PRIMARY KEY (FNUMBER);


CREATE  UNIQUE INDEX FLIEGHT_UNIQ ON FLIEGHT_DETAILS
(
	FNAME  ASC
);


ALTER TABLE FLIEGHT_DETAILS
	ADD CONSTRAINT  FLIEGHT_UNIQ UNIQUE (FNAME);




CREATE TABLE FLIGHT_AVAILABLE
(
	FNUMBER  VARCHAR2(30 BYTE) NOT NULL ,
	AVAIL_DAY  VARCHAR2(10 BYTE)  NOT NULL 
);


CREATE TABLE FLIGHTSTATUS
(
	FNUMBER  VARCHAR2(30 BYTE) NOT NULL ,
	RESERVED  NUMBER  NOT NULL ,
	AVAILABLE  NUMBER  NOT NULL 
);


CREATE TABLE FLYERPOINTS
(
	USER_ID  VARCHAR2(50 BYTE)  NOT NULL ,
	MILES  NUMBER(30,2)  NOT NULL 
);


CREATE TABLE HOTELS
(
	HOTEL_ID  NUMBER  NULL ,
	HOTEL_NAME  VARCHAR2(100 BYTE)  NOT NULL ,
	HOTEL_CITY  VARCHAR2(50 BYTE)  NOT NULL ,
	HOTEL_STREET  VARCHAR2(100 BYTE)  NULL ,
	MIN_CHARGE  NUMBER(20,2)  NULL ,
	HOTEL_CONTACT  VARCHAR2(25 BYTE)  NULL ,
	COUNTRY  VARCHAR2(50 BYTE)  NOT NULL 
);


CREATE  UNIQUE INDEX HOTEL_NAME_PK ON HOTELS
(
	HOTEL_NAME  ASC,
	HOTEL_CITY  ASC
);


ALTER TABLE HOTELS
	ADD CONSTRAINT  HOTEL_NAME_PK PRIMARY KEY (HOTEL_NAME,HOTEL_CITY);


CREATE  UNIQUE INDEX HOTEL_UNIQ ON HOTELS
(
	HOTEL_NAME  ASC
);


ALTER TABLE HOTELS
	ADD CONSTRAINT  HOTEL_UNIQ UNIQUE (HOTEL_NAME);


CREATE TABLE LOGIN_MASTER
(
	USER_ID  VARCHAR2(50 BYTE)  NOT NULL ,
	LOGIN_TIME  DATE  NULL ,
	LOGOUT_TIME  DATE  NULL 
);


CREATE TABLE USER_DETAILS
(
	USER_ID  VARCHAR2(50 BYTE)  NOT NULL ,
	USER_PWD  VARCHAR2(25 BYTE)  NULL ,
	USER_SURNAME  VARCHAR2(30 BYTE)  NULL ,
	USER_NAME  VARCHAR2(50 BYTE)  NOT NULL ,
	USER_DOB  DATE  NOT NULL ,
	USER_GENDER  VARCHAR2(10 BYTE)  NOT NULL ,
	USER_EMAIL  VARCHAR2(50 BYTE)  NOT NULL ,
	USER_MOBILE  VARCHAR2(15 BYTE)  NOT NULL ,
	USER_DOR  DATE  NOT NULL ,
	USER_CITY  VARCHAR2(50 BYTE)  NOT NULL ,
	USER_STATE  VARCHAR2(50 BYTE)  NOT NULL ,
	USER_COUNTRY  VARCHAR2(50 BYTE)  NOT NULL ,
	USER_PIN  VARCHAR2(20 BYTE)  NOT NULL ,
	USER_TITLE  VARCHAR2(10 BYTE)  NOT NULL ,
	USER_TYPE  VARCHAR2(15 BYTE)  NOT NULL ,
	USER_QUESTN  VARCHAR2(200 BYTE)  NULL ,
	USER_ANS  VARCHAR2(200 BYTE)  NULL 
);


CREATE  UNIQUE INDEX USER_DET_PK ON USER_DETAILS
(
	USER_ID  ASC
);


ALTER TABLE USER_DETAILS
	ADD CONSTRAINT  USER_DET_PK PRIMARY KEY (USER_ID);


ALTER TABLE AIRLINE_SERVICES
	ADD (CONSTRAINT  SER_FNUM_FK FOREIGN KEY (FNUMBER) REFERENCES FLIEGHT_DETAILS(FNUMBER) ON DELETE CASCADE);


ALTER TABLE BOOKINGDETAILS
	ADD (CONSTRAINT  BOOK_FNUM_FK FOREIGN KEY (FNUMBER) REFERENCES FLIEGHT_DETAILS(FNUMBER) ON DELETE CASCADE);


ALTER TABLE BOOKINGDETAILS
	ADD (CONSTRAINT  BOOK_USERID_FK FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(USER_ID) ON DELETE CASCADE);


ALTER TABLE FLIGHT_AVAILABLE
	ADD (CONSTRAINT  FAVAIL_FNUM_FK FOREIGN KEY (FNUMBER) REFERENCES FLIEGHT_DETAILS(FNUMBER) ON DELETE CASCADE);


ALTER TABLE FLIGHTSTATUS
	ADD (CONSTRAINT  FSTATUS_FNUM_FK FOREIGN KEY (FNUMBER) REFERENCES FLIEGHT_DETAILS(FNUMBER) ON DELETE CASCADE);


ALTER TABLE FLYERPOINTS
	ADD (CONSTRAINT  FPOINTS_ID_FK FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(USER_ID) ON DELETE CASCADE);


ALTER TABLE LOGIN_MASTER
	ADD (CONSTRAINT  LOGIN_ID_FK FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(USER_ID) ON DELETE CASCADE);


CREATE  OR REPLACE  PROCEDURE ADMIN_GETFLYERS(

   title out USER_DETAILS.USER_TITLE%type,
   sname out user_details.User_surname%type,
   fname out user_details.USER_NAME%type,
   gender out user_details.USER_GENDER%type,
   mobile out user_details.USER_MOBILE%type,
   email out user_details.USER_EMAIL%type,
   dor out user_details.USER_DOR%type,
   city out user_details.USER_CITY%type,
   state out user_details.USER_STATE%type,
   country out user_details.user_country%type,
   rmiles out user_details.USER_J_REMAINS%type,
   userid out user_details.user_id%type
)
as
  begin
   select    nvl(USER_TITLE,''),
   nvl(User_surname,''),nvl(USER_NAME,''),
   nvl(USER_GENDER,''),nvl(USER_MOBILE,''),
   nvl(USER_EMAIL,''),nvl(to_char(USER_DOR,'DD-MON-YYYY'),''),nvl(USER_CITY,''),
   nvl(USER_STATE,''),nvl(user_country,''),
   nvl(USER_J_REMAINS,''),nvl(user_id,'')
   into   title,sname,fname,gender,mobile,email,dor,city,state,
  country,rmiles,userid
  from user_details
  where USER_TYPE='flyer';
 end admin_getflyers;

/

CREATE  TRIGGER tD_FLIEGHT_DETAILS AFTER DELETE ON FLIEGHT_DETAILS for each row
-- ERwin Builtin Thursday, December 09, 2010 1:10:02 PM
-- DELETE trigger on FLIEGHT_DETAILS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Thursday, December 09, 2010 1:10:02 PM */
    /* FLIEGHT_DETAILS SER_FNUM_FK AIRLINE_SERVICES on parent delete cascade */
    /* ERWIN_RELATION:CHECKSUM="00038e89", PARENT_OWNER="FLIER", PARENT_TABLE="FLIEGHT_DETAILS"
    CHILD_OWNER="FLIER", CHILD_TABLE="AIRLINE_SERVICES"
    P2C_VERB_PHRASE="SER_FNUM_FK", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="SER_FNUM_FK", FK_COLUMNS="FNUMBER" */
    DELETE FROM AIRLINE_SERVICES
      WHERE
        /*  %JoinFKPK(AIRLINE_SERVICES,:%Old," = "," AND") */
        AIRLINE_SERVICES.FNUMBER = :old.FNUMBER;

    /* ERwin Builtin Thursday, December 09, 2010 1:10:02 PM */
    /* FLIEGHT_DETAILS FSTATUS_FNUM_FK FLIGHTSTATUS on parent delete cascade */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="FLIER", PARENT_TABLE="FLIEGHT_DETAILS"
    CHILD_OWNER="FLIER", CHILD_TABLE="FLIGHTSTATUS"
    P2C_VERB_PHRASE="FSTATUS_FNUM_FK", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="FSTATUS_FNUM_FK", FK_COLUMNS="FNUMBER" */
    DELETE FROM FLIGHTSTATUS
      WHERE
        /*  %JoinFKPK(FLIGHTSTATUS,:%Old," = "," AND") */
        FLIGHTSTATUS.FNUMBER = :old.FNUMBER;

    /* ERwin Builtin Thursday, December 09, 2010 1:10:02 PM */
    /* FLIEGHT_DETAILS BOOK_FNUM_FK BOOKINGDETAILS on parent delete cascade */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="FLIER", PARENT_TABLE="FLIEGHT_DETAILS"
    CHILD_OWNER="FLIER", CHILD_TABLE="BOOKINGDETAILS"
    P2C_VERB_PHRASE="BOOK_FNUM_FK", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="BOOK_FNUM_FK", FK_COLUMNS="FNUMBER" */
    DELETE FROM BOOKINGDETAILS
      WHERE
        /*  %JoinFKPK(BOOKINGDETAILS,:%Old," = "," AND") */
        BOOKINGDETAILS.FNUMBER = :old.FNUMBER;

    /* ERwin Builtin Thursday, December 09, 2010 1:10:02 PM */
    /* FLIEGHT_DETAILS FAVAIL_FNUM_FK FLIGHT_AVAILABLE on parent delete cascade */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="FLIER", PARENT_TABLE="FLIEGHT_DETAILS"
    CHILD_OWNER="FLIER", CHILD_TABLE="FLIGHT_AVAILABLE"
    P2C_VERB_PHRASE="FAVAIL_FNUM_FK", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="FAVAIL_FNUM_FK", FK_COLUMNS="FNUMBER" */
    DELETE FROM FLIGHT_AVAILABLE
      WHERE
        /*  %JoinFKPK(FLIGHT_AVAILABLE,:%Old," = "," AND") */
        FLIGHT_AVAILABLE.FNUMBER = :old.FNUMBER;


-- ERwin Builtin Thursday, December 09, 2010 1:10:02 PM
END;
/

CREATE  TRIGGER tU_FLIEGHT_DETAILS AFTER UPDATE ON FLIEGHT_DETAILS for each row
-- ERwin Builtin Thursday, December 09, 2010 1:10:02 PM
-- UPDATE trigger on FLIEGHT_DETAILS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Thursday, December 09, 2010 1:10:02 PM */
  /* FLIEGHT_DETAILS SER_FNUM_FK AIRLINE_SERVICES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00046f8b", PARENT_OWNER="FLIER", PARENT_TABLE="FLIEGHT_DETAILS"
    CHILD_OWNER="FLIER", CHILD_TABLE="AIRLINE_SERVICES"
    P2C_VERB_PHRASE="SER_FNUM_FK", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="SER_FNUM_FK", FK_COLUMNS="FNUMBER" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.FNUMBER <> :new.FNUMBER
  THEN
    SELECT count(*) INTO NUMROWS
      FROM AIRLINE_SERVICES
      WHERE
        /*  %JoinFKPK(AIRLINE_SERVICES,:%Old," = "," AND") */
        AIRLINE_SERVICES.FNUMBER = :old.FNUMBER;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update FLIEGHT_DETAILS because AIRLINE_SERVICES exists.'
      );
    END IF;
  END IF;

  /* FLIEGHT_DETAILS FSTATUS_FNUM_FK FLIGHTSTATUS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="FLIER", PARENT_TABLE="FLIEGHT_DETAILS"
    CHILD_OWNER="FLIER", CHILD_TABLE="FLIGHTSTATUS"
    P2C_VERB_PHRASE="FSTATUS_FNUM_FK", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="FSTATUS_FNUM_FK", FK_COLUMNS="FNUMBER" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.FNUMBER <> :new.FNUMBER
  THEN
    UPDATE FLIGHTSTATUS
      SET
        /* %SetFK(FLIGHTSTATUS,NULL) */
        FLIGHTSTATUS.FNUMBER = NULL
      WHERE
        /* %JoinFKPK(FLIGHTSTATUS,:%Old," = ",",") */
        FLIGHTSTATUS.FNUMBER = :old.FNUMBER;
  END IF;

  /* FLIEGHT_DETAILS BOOK_FNUM_FK BOOKINGDETAILS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="FLIER", PARENT_TABLE="FLIEGHT_DETAILS"
    CHILD_OWNER="FLIER", CHILD_TABLE="BOOKINGDETAILS"
    P2C_VERB_PHRASE="BOOK_FNUM_FK", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="BOOK_FNUM_FK", FK_COLUMNS="FNUMBER" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.FNUMBER <> :new.FNUMBER
  THEN
    UPDATE BOOKINGDETAILS
      SET
        /* %SetFK(BOOKINGDETAILS,NULL) */
        BOOKINGDETAILS.FNUMBER = NULL
      WHERE
        /* %JoinFKPK(BOOKINGDETAILS,:%Old," = ",",") */
        BOOKINGDETAILS.FNUMBER = :old.FNUMBER;
  END IF;

  /* FLIEGHT_DETAILS FAVAIL_FNUM_FK FLIGHT_AVAILABLE on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="FLIER", PARENT_TABLE="FLIEGHT_DETAILS"
    CHILD_OWNER="FLIER", CHILD_TABLE="FLIGHT_AVAILABLE"
    P2C_VERB_PHRASE="FAVAIL_FNUM_FK", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="FAVAIL_FNUM_FK", FK_COLUMNS="FNUMBER" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.FNUMBER <> :new.FNUMBER
  THEN
    UPDATE FLIGHT_AVAILABLE
      SET
        /* %SetFK(FLIGHT_AVAILABLE,NULL) */
        FLIGHT_AVAILABLE.FNUMBER = NULL
      WHERE
        /* %JoinFKPK(FLIGHT_AVAILABLE,:%Old," = ",",") */
        FLIGHT_AVAILABLE.FNUMBER = :old.FNUMBER;
  END IF;


-- ERwin Builtin Thursday, December 09, 2010 1:10:02 PM
END;
/

CREATE  TRIGGER tD_USER_DETAILS AFTER DELETE ON USER_DETAILS for each row
-- ERwin Builtin Thursday, December 09, 2010 1:10:02 PM
-- DELETE trigger on USER_DETAILS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Thursday, December 09, 2010 1:10:02 PM */
    /* USER_DETAILS LOGIN_ID_FK LOGIN_MASTER on parent delete cascade */
    /* ERWIN_RELATION:CHECKSUM="000279fb", PARENT_OWNER="FLIER", PARENT_TABLE="USER_DETAILS"
    CHILD_OWNER="FLIER", CHILD_TABLE="LOGIN_MASTER"
    P2C_VERB_PHRASE="LOGIN_ID_FK", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="LOGIN_ID_FK", FK_COLUMNS="USER_ID" */
    DELETE FROM LOGIN_MASTER
      WHERE
        /*  %JoinFKPK(LOGIN_MASTER,:%Old," = "," AND") */
        LOGIN_MASTER.USER_ID = :old.USER_ID;

    /* ERwin Builtin Thursday, December 09, 2010 1:10:02 PM */
    /* USER_DETAILS BOOK_USERID_FK BOOKINGDETAILS on parent delete cascade */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="FLIER", PARENT_TABLE="USER_DETAILS"
    CHILD_OWNER="FLIER", CHILD_TABLE="BOOKINGDETAILS"
    P2C_VERB_PHRASE="BOOK_USERID_FK", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="BOOK_USERID_FK", FK_COLUMNS="USER_ID" */
    DELETE FROM BOOKINGDETAILS
      WHERE
        /*  %JoinFKPK(BOOKINGDETAILS,:%Old," = "," AND") */
        BOOKINGDETAILS.USER_ID = :old.USER_ID;

    /* ERwin Builtin Thursday, December 09, 2010 1:10:02 PM */
    /* USER_DETAILS FPOINTS_ID_FK FLYERPOINTS on parent delete cascade */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="FLIER", PARENT_TABLE="USER_DETAILS"
    CHILD_OWNER="FLIER", CHILD_TABLE="FLYERPOINTS"
    P2C_VERB_PHRASE="FPOINTS_ID_FK", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="FPOINTS_ID_FK", FK_COLUMNS="USER_ID" */
    DELETE FROM FLYERPOINTS
      WHERE
        /*  %JoinFKPK(FLYERPOINTS,:%Old," = "," AND") */
        FLYERPOINTS.USER_ID = :old.USER_ID;


-- ERwin Builtin Thursday, December 09, 2010 1:10:02 PM
END;
/

CREATE  TRIGGER tU_USER_DETAILS AFTER UPDATE ON USER_DETAILS for each row
-- ERwin Builtin Thursday, December 09, 2010 1:10:02 PM
-- UPDATE trigger on USER_DETAILS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* USER_DETAILS LOGIN_ID_FK LOGIN_MASTER on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="0003084f", PARENT_OWNER="FLIER", PARENT_TABLE="USER_DETAILS"
    CHILD_OWNER="FLIER", CHILD_TABLE="LOGIN_MASTER"
    P2C_VERB_PHRASE="LOGIN_ID_FK", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="LOGIN_ID_FK", FK_COLUMNS="USER_ID" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.USER_ID <> :new.USER_ID
  THEN
    UPDATE LOGIN_MASTER
      SET
        /* %SetFK(LOGIN_MASTER,NULL) */
        LOGIN_MASTER.USER_ID = NULL
      WHERE
        /* %JoinFKPK(LOGIN_MASTER,:%Old," = ",",") */
        LOGIN_MASTER.USER_ID = :old.USER_ID;
  END IF;

  /* USER_DETAILS BOOK_USERID_FK BOOKINGDETAILS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="FLIER", PARENT_TABLE="USER_DETAILS"
    CHILD_OWNER="FLIER", CHILD_TABLE="BOOKINGDETAILS"
    P2C_VERB_PHRASE="BOOK_USERID_FK", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="BOOK_USERID_FK", FK_COLUMNS="USER_ID" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.USER_ID <> :new.USER_ID
  THEN
    UPDATE BOOKINGDETAILS
      SET
        /* %SetFK(BOOKINGDETAILS,NULL) */
        BOOKINGDETAILS.USER_ID = NULL
      WHERE
        /* %JoinFKPK(BOOKINGDETAILS,:%Old," = ",",") */
        BOOKINGDETAILS.USER_ID = :old.USER_ID;
  END IF;

  /* USER_DETAILS FPOINTS_ID_FK FLYERPOINTS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="FLIER", PARENT_TABLE="USER_DETAILS"
    CHILD_OWNER="FLIER", CHILD_TABLE="FLYERPOINTS"
    P2C_VERB_PHRASE="FPOINTS_ID_FK", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="FPOINTS_ID_FK", FK_COLUMNS="USER_ID" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.USER_ID <> :new.USER_ID
  THEN
    UPDATE FLYERPOINTS
      SET
        /* %SetFK(FLYERPOINTS,NULL) */
        FLYERPOINTS.USER_ID = NULL
      WHERE
        /* %JoinFKPK(FLYERPOINTS,:%Old," = ",",") */
        FLYERPOINTS.USER_ID = :old.USER_ID;
  END IF;


-- ERwin Builtin Thursday, December 09, 2010 1:10:02 PM
END;
/

